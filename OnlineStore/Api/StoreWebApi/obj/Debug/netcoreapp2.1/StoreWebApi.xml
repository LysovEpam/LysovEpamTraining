<?xml version="1.0"?>
<doc>
    <assembly>
        <name>StoreWebApi</name>
    </assembly>
    <members>
        <member name="M:StoreWebApi.Controllers.Main.ProductCategoryController.GetList">
            <summary>
            Get list all product categories
            </summary>
            <returns>A newly created product category</returns>
            <response code="200">Returns list all product categories</response>
        </member>
        <member name="M:StoreWebApi.Controllers.Main.ProductCategoryController.GetById(System.Int32)">
            <summary>
            Get product category by id
            </summary>
            <param name="id">id product category</param>
            <returns>product category</returns>
            <response code="200">Returns the product category</response>
            <response code="400">If the id is null</response>
        </member>
        <member name="M:StoreWebApi.Controllers.Main.ProductCategoryController.GetByName(System.String)">
            <summary>
            Get product category by id
            </summary>
            <param name="categoryName">name product category</param>
            <returns>product categories</returns>
            <response code="200">Returns the product categories</response>
            <response code="400">If the category name is null</response>
        </member>
        <member name="M:StoreWebApi.Controllers.Main.ProductCategoryController.SearchCategory(System.String)">
            <summary>
            Search product category
            </summary>
            <param name="searchString">search string</param>
            <returns>product categories</returns>
            <response code="200">Returns the product category</response>
            <response code="400">If the search string is null</response>
        </member>
        <member name="M:StoreWebApi.Controllers.Main.ProductCategoryController.Create(CommonEntities.ProductCategory)">
             <summary>
             Create a product category
             </summary>
             <remarks>
             Sample request:
            
                 POST /ProductCategory
                 {
                    "IdEntity": null,
                    "CategoryName": "New category name",
                    "Description": "New description"
                 }
            
             </remarks>
             <param name="productCategory"></param>
             <returns>Category creation result</returns>
             <response code="201">The result of creating a new category</response>
             <response code="400">If the item is null</response>
             <response code="401">If the user is not authorized or there is no permission to add</response> 
        </member>
        <member name="M:StoreWebApi.Controllers.Main.ProductCategoryController.Update(CommonEntities.ProductCategory)">
             <summary>
             Update a product category
             </summary>
             <remarks>
             Sample request:
            
                 POST /ProductCategory
                 {
                    "IdEntity": 1,
                    "CategoryName": "category update",
                    "Description": "description update"
                 }
            
             </remarks>
             <param name="productCategory"></param>
             <returns>Category update result</returns>
             <response code="200">Update success</response>
             <response code="400">If the item is null</response>
             <response code="401">If the user is not authorized or there is no permission to update</response> 
        </member>
        <member name="M:StoreWebApi.Controllers.Main.ProductCategoryController.Delete(System.Int32)">
            <summary>
            Delete a specific product category
            </summary>
            <param name="id">Id product category</param>        
            <returns>Category delete result</returns>
            <response code="200">Delete success</response>
            <response code="400">If the item is null</response>
            <response code="401">If the user is not authorized or there is no permission to delete</response> 
        </member>
    </members>
</doc>
